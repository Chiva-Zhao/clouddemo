spring:
  application:
    name: gateway-zuul
server:
  port: 8150
eureka:
  datacenter: SpringCloud   # 修改 http://localhost:8761 地址 Eureka 首页上面 System Status 的 Data center 显示信息
  environment: Test         # 修改 http://localhost:8761 地址 Eureka 首页上面 System Status 的 Environment 显示信息
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:8761/eureka
#    healthcheck:  # 健康检查
#      enabled: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
logging:
  level:
    root: INFO
    com.zzh.cloud: DEBUG
ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 60000
# 测试二，自定义路径配置，给 user-provider-reg 微服务添加前缀地址，反向代理用户微服务
#zuul:
#  routes:
#    user-provider-reg: /user/**

## 测试三，自定义路径配置，给 user-provider-reg 微服务添加前缀地址，反向代理用户微服务，其它代理路径一律失效
#zuul:
#  ignoredServices: '*'
#  routes:
#    user-provider-reg: /user/**

# 测试四，自定义路径配置，给 user-provider-reg 微服务添加前缀地址，代理、反向代理用户微服务，忽略禁用 movie-consumer 代理、反向代理路径
#zuul:
#  ignoredServices: movie-consumer
#  routes:
#    user-provider-reg: /user/**

#####################################################################################################
# 解决第一次请求报超时异常的方案，因为 hystrix 的默认超时时间是 1 秒，因此请求超过该时间后，就会出现页面超时显示 ：
#
# 这里就介绍大概三种方式来解决超时的问题，解决方案如下：
#
# 第一种方式：将 hystrix 的超时时间设置成 5000 毫秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
#
# 或者：
# 第二种方式：将 hystrix 的超时时间直接禁用掉，这样就没有超时的一说了，因为永远也不会超时了
# hystrix.command.default.execution.timeout.enabled: false
#
# 或者：
# 第三种方式：索性禁用feign的hystrix支持
# feign.hystrix.enabled: false ## 索性禁用feign的hystrix支持

# 超时的issue：https://github.com/spring-cloud/spring-cloud-netflix/issues/768
# 超时的解决方案： http://stackoverflow.com/questions/27375557/hystrix-command-fails-with-timed-out-and-no-fallback-available
# hystrix配置： https://github.com/Netflix/Hystrix/wiki/Configuration#execution.isolation.thread.timeoutInMilliseconds
#####################################################################################################